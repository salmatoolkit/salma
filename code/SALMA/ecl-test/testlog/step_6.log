6 : _77843 _77844 _77845 _77846
Scheduled Goals:
      Name       Time Level         Id     Params Term
-------------------------------------------------------
         f          0     1          1 [] ok
         f          0     0          2 [p([0, 2]) : 1] cf(4)
         f          1     1          1 [] ok
         f          1     0          3 [] cf(5)
         f          2     1          1 [] ok
         f          2     0          4 [] cf(6)
         f          3     1          1 [] ok
         f          3     0          5 [] cf(7)
         f          4     0          6 [] cf(8)
         f          4     1          1 [] ok
         f          5     1          1 [] ok
         f          5     0          7 [] cf(9)


Formula Cache:
         1 let(z : _78303, all([xpos(rob1, _78310, s0), ypos(rob1, _78316, s0), +(_78310, _78316, _78323), +(_78323, 5, _78329), _78303 = _78329]), until(30, one([not2(occur(grab(rob1, item1))), let(startx : _78358, all([xpos(rob1, _78365, s0), _78358 = _78365]), until(5, all([xpos(rob1, _78382, s0), _78382 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _78401, all([xpos(rob1, _78408, s0), -(_78408, 1, _78415), _78401 = _78415]), all([w > z]))))
         4 until(30, sched(p([0, 2]), _78439, ok), let(w : _78453, all([xpos(rob1, _78460, s0), -(_78460, 1, _78467), _78453 = _78467]), all([w > 25])))
         5 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _78508, all([xpos(rob1, _78515, s0), _78508 = _78515]), until(5, all([xpos(rob1, _78532, s0), _78532 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _78551, all([xpos(rob1, _78558, s0), -(_78558, 1, _78565), _78551 = _78565]), all([w > 26])))
         6 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _78606, all([xpos(rob1, _78613, s0), _78606 = _78613]), until(5, all([xpos(rob1, _78630, s0), _78630 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _78649, all([xpos(rob1, _78656, s0), -(_78656, 1, _78663), _78649 = _78663]), all([w > 27])))
         7 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _78704, all([xpos(rob1, _78711, s0), _78704 = _78711]), until(5, all([xpos(rob1, _78728, s0), _78728 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _78747, all([xpos(rob1, _78754, s0), -(_78754, 1, _78761), _78747 = _78761]), all([w > 28])))
         8 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _78802, all([xpos(rob1, _78809, s0), _78802 = _78809]), until(5, all([xpos(rob1, _78826, s0), _78826 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _78845, all([xpos(rob1, _78852, s0), -(_78852, 1, _78859), _78845 = _78859]), all([w > 29])))
         9 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _78900, all([xpos(rob1, _78907, s0), _78900 = _78907]), until(5, all([xpos(rob1, _78924, s0), _78924 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _78943, all([xpos(rob1, _78950, s0), -(_78950, 1, _78957), _78943 = _78957]), all([w > 30])))


Cache Candidates:
f(0) [9, 8, 7, 6, 5, 4, 1]


State:
[fl(domain, agent) - [rob1, rob2], fl(painted, item1) - false, fl(painted, item2) - false, fl(active, rob1) - false, fl(domain, channel) - [], fl(active, rob2) - false, fl(domain, robot) - [rob1, rob2], fl(domain, object) - [item1, item2, rob1, rob2], fl(domain, sensor) - [], fl(xpos, rob1) - 16, fl(domain, item) - [item1, item2], fl(time) - 6, fl(xpos, rob2) - 10, fl(carrying, rob1, item1) - true, fl(carrying, rob1, item2) - false, fl(carrying, rob2, item1) - false, fl(carrying, rob2, item2) - false, fl(domain, connector) - [], fl(domain, message) - [], fl(domain, remoteSensor) - [], fl(ypos, rob1) - 10, fl(domain, sort) - [agent, channel, connector, item, message, object, remoteSensor, robot, sensor, sort], fl(ypos, rob2) - 20]

--------------------------------------------

