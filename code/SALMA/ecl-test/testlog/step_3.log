3 : _32777 _32778 _32779 _32780
Scheduled Goals:
      Name       Time Level         Id     Params Term
-------------------------------------------------------
         f          0     1          1 [] cf(2)
         f          0     0          2 [p([0, 2]) : 1] cf(4)
         f          1     1          1 [] ok
         f          1     0          3 [] cf(5)
         f          2     1          1 [] ok
         f          2     0          4 [] cf(6)


Formula Cache:
         1 let(z : _33053, all([xpos(rob1, _33060, s0), ypos(rob1, _33066, s0), +(_33060, _33066, _33073), +(_33073, 5, _33079), _33053 = _33079]), until(30, one([not2(occur(grab(rob1, item1))), let(startx : _33108, all([xpos(rob1, _33115, s0), _33108 = _33115]), until(5, all([xpos(rob1, _33132, s0), _33132 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _33151, all([xpos(rob1, _33158, s0), -(_33158, 1, _33165), _33151 = _33165]), all([w > z]))))
         2 one([not2(occur(grab(rob1, item1))), until(5, all([xpos(rob1, _33206, s0), _33206 >= 10]), not2(carrying(rob1, item1, s0)))])
         4 until(30, sched(p([0, 2]), _33230, ok), let(w : _33244, all([xpos(rob1, _33251, s0), -(_33251, 1, _33258), _33244 = _33258]), all([w > 25])))
         5 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _33299, all([xpos(rob1, _33306, s0), _33299 = _33306]), until(5, all([xpos(rob1, _33323, s0), _33323 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _33342, all([xpos(rob1, _33349, s0), -(_33349, 1, _33356), _33342 = _33356]), all([w > 26])))
         6 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _33397, all([xpos(rob1, _33404, s0), _33397 = _33404]), until(5, all([xpos(rob1, _33421, s0), _33421 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _33440, all([xpos(rob1, _33447, s0), -(_33447, 1, _33454), _33440 = _33454]), all([w > 27])))


Cache Candidates:
f(0) [6, 5, 4, 1]


State:
[fl(domain, agent) - [rob1, rob2], fl(painted, item1) - false, fl(painted, item2) - false, fl(active, rob1) - false, fl(domain, channel) - [], fl(active, rob2) - false, fl(domain, robot) - [rob1, rob2], fl(domain, object) - [item1, item2, rob1, rob2], fl(domain, sensor) - [], fl(xpos, rob1) - 13, fl(domain, item) - [item1, item2], fl(time) - 3, fl(xpos, rob2) - 10, fl(carrying, rob1, item1) - true, fl(carrying, rob1, item2) - false, fl(carrying, rob2, item1) - false, fl(carrying, rob2, item2) - false, fl(domain, connector) - [], fl(domain, message) - [], fl(domain, remoteSensor) - [], fl(ypos, rob1) - 10, fl(domain, sort) - [agent, channel, connector, item, message, object, remoteSensor, robot, sensor, sort], fl(ypos, rob2) - 20]

--------------------------------------------

