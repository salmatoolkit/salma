8 : _135259 _135260 _135261 _135262
Scheduled Goals:
      Name       Time Level         Id     Params Term
-------------------------------------------------------
         f          0     1          1 [] ok
         f          0     0          2 [p([0, 2]) : 1] cf(4)
         f          1     1          1 [] ok
         f          1     0          3 [p([0, 2]) : 9] cf(17)
         f          2     1          1 [] ok
         f          2     0          4 [p([0, 2]) : 12] cf(18)
         f          3     1          1 [] ok
         f          3     0          5 [p([0, 2]) : 10] cf(19)
         f          4     1          1 [] ok
         f          4     0          6 [p([0, 2]) : 8] cf(20)
         f          5     1          1 [] ok
         f          5     0          7 [p([0, 2]) : 11] cf(21)
         f          6     1          8 [] cf(10)
         f          6     1          1 [] ok
         f          6     1          9 [] cf(10)
         f          6     1         10 [] cf(10)
         f          6     1         11 [] cf(10)
         f          6     1         12 [] cf(10)
         f          6     0         14 [p([0, 2]) : 13] cf(22)
         f          6     1         13 [] cf(10)
         f          7     1          8 [] ok
         f          7     1          1 [] ok
         f          7     1          9 [] ok
         f          7     1         10 [] ok
         f          7     1         11 [] ok
         f          7     1         12 [] ok
         f          7     1         13 [] ok
         f          7     0         15 [] cf(23)


Formula Cache:
         1 let(z : _136281, all([xpos(rob1, _136288, s0), ypos(rob1, _136294, s0), +(_136288, _136294, _136301), +(_136301, 5, _136307), _136281 = _136307]), until(30, one([not2(occur(grab(rob1, item1))), let(startx : _136336, all([xpos(rob1, _136343, s0), _136336 = _136343]), until(5, all([xpos(rob1, _136360, s0), _136360 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _136379, all([xpos(rob1, _136386, s0), -(_136386, 1, _136393), _136379 = _136393]), all([w > z]))))
        17 until(30, sched(p([0, 2]), _136417, ok), let(w : _136431, all([xpos(rob1, _136438, s0), -(_136438, 1, _136445), _136431 = _136445]), all([w > 26])))
        18 until(30, sched(p([0, 2]), _136469, ok), let(w : _136483, all([xpos(rob1, _136490, s0), -(_136490, 1, _136497), _136483 = _136497]), all([w > 27])))
        19 until(30, sched(p([0, 2]), _136521, ok), let(w : _136535, all([xpos(rob1, _136542, s0), -(_136542, 1, _136549), _136535 = _136549]), all([w > 28])))
         4 until(30, sched(p([0, 2]), _136573, ok), let(w : _136587, all([xpos(rob1, _136594, s0), -(_136594, 1, _136601), _136587 = _136601]), all([w > 25])))
        20 until(30, sched(p([0, 2]), _136625, ok), let(w : _136639, all([xpos(rob1, _136646, s0), -(_136646, 1, _136653), _136639 = _136653]), all([w > 29])))
        21 until(30, sched(p([0, 2]), _136677, ok), let(w : _136691, all([xpos(rob1, _136698, s0), -(_136698, 1, _136705), _136691 = _136705]), all([w > 30])))
        22 until(30, sched(p([0, 2]), _136729, ok), let(w : _136743, all([xpos(rob1, _136750, s0), -(_136750, 1, _136757), _136743 = _136757]), all([w > 31])))
        23 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _136798, all([xpos(rob1, _136805, s0), _136798 = _136805]), until(5, all([xpos(rob1, _136822, s0), _136822 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _136841, all([xpos(rob1, _136848, s0), -(_136848, 1, _136855), _136841 = _136855]), all([w > 32])))
        10 one([not2(occur(grab(rob1, item1))), until(5, all([xpos(rob1, _136896, s0), _136896 >= 16]), not2(carrying(rob1, item1, s0)))])


Cache Candidates:
f(0) [23, 22, 21, 20, 19, 18, 17, 4, 1]


State:
[fl(domain, agent) - [rob1, rob2], fl(painted, item1) - false, fl(painted, item2) - false, fl(active, rob1) - false, fl(domain, channel) - [], fl(active, rob2) - false, fl(domain, robot) - [rob1, rob2], fl(domain, object) - [item1, item2, rob1, rob2], fl(domain, sensor) - [], fl(xpos, rob1) - 18, fl(domain, item) - [item1, item2], fl(time) - 8, fl(xpos, rob2) - 10, fl(carrying, rob1, item1) - true, fl(carrying, rob1, item2) - false, fl(carrying, rob2, item1) - false, fl(carrying, rob2, item2) - false, fl(domain, connector) - [], fl(domain, message) - [], fl(domain, remoteSensor) - [], fl(ypos, rob1) - 10, fl(domain, sort) - [agent, channel, connector, item, message, object, remoteSensor, robot, sensor, sort], fl(ypos, rob2) - 20]

--------------------------------------------

