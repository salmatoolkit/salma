5 : _57899 _57900 _57901 _57902
Scheduled Goals:
      Name       Time Level         Id     Params Term
-------------------------------------------------------
         f          0     1          1 [] ok
         f          0     0          2 [p([0, 2]) : 1] cf(4)
         f          1     1          1 [] ok
         f          1     0          3 [] cf(5)
         f          2     1          1 [] ok
         f          2     0          4 [] cf(6)
         f          3     1          1 [] ok
         f          3     0          5 [] cf(7)
         f          4     0          6 [] cf(8)
         f          4     1          1 [] ok


Formula Cache:
         1 let(z : _58297, all([xpos(rob1, _58304, s0), ypos(rob1, _58310, s0), +(_58304, _58310, _58317), +(_58317, 5, _58323), _58297 = _58323]), until(30, one([not2(occur(grab(rob1, item1))), let(startx : _58352, all([xpos(rob1, _58359, s0), _58352 = _58359]), until(5, all([xpos(rob1, _58376, s0), _58376 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _58395, all([xpos(rob1, _58402, s0), -(_58402, 1, _58409), _58395 = _58409]), all([w > z]))))
         2 one([not2(occur(grab(rob1, item1))), until(5, all([xpos(rob1, _58450, s0), _58450 >= 10]), not2(carrying(rob1, item1, s0)))])
         3 until(30, sched(p([0, 2]), _58474, cf(2)), let(w : _58490, all([xpos(rob1, _58497, s0), -(_58497, 1, _58504), _58490 = _58504]), all([w > 25])))
         4 until(30, sched(p([0, 2]), _58528, ok), let(w : _58542, all([xpos(rob1, _58549, s0), -(_58549, 1, _58556), _58542 = _58556]), all([w > 25])))
         5 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _58597, all([xpos(rob1, _58604, s0), _58597 = _58604]), until(5, all([xpos(rob1, _58621, s0), _58621 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _58640, all([xpos(rob1, _58647, s0), -(_58647, 1, _58654), _58640 = _58654]), all([w > 26])))
         6 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _58695, all([xpos(rob1, _58702, s0), _58695 = _58702]), until(5, all([xpos(rob1, _58719, s0), _58719 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _58738, all([xpos(rob1, _58745, s0), -(_58745, 1, _58752), _58738 = _58752]), all([w > 27])))
         7 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _58793, all([xpos(rob1, _58800, s0), _58793 = _58800]), until(5, all([xpos(rob1, _58817, s0), _58817 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _58836, all([xpos(rob1, _58843, s0), -(_58843, 1, _58850), _58836 = _58850]), all([w > 28])))
         8 until(30, one([not2(occur(grab(rob1, item1))), let(startx : _58891, all([xpos(rob1, _58898, s0), _58891 = _58898]), until(5, all([xpos(rob1, _58915, s0), _58915 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _58934, all([xpos(rob1, _58941, s0), -(_58941, 1, _58948), _58934 = _58948]), all([w > 29])))


Cache Candidates:
f(0) [8, 7, 6, 5, 4, 3, 1]
f(0, 2) [2]


State:
[fl(domain, agent) - [rob1, rob2], fl(painted, item1) - false, fl(painted, item2) - false, fl(active, rob1) - false, fl(domain, channel) - [], fl(active, rob2) - false, fl(domain, robot) - [rob1, rob2], fl(domain, object) - [item1, item2, rob1, rob2], fl(domain, sensor) - [], fl(xpos, rob1) - 15, fl(domain, item) - [item1, item2], fl(time) - 5, fl(xpos, rob2) - 10, fl(carrying, rob1, item1) - false, fl(carrying, rob1, item2) - false, fl(carrying, rob2, item1) - false, fl(carrying, rob2, item2) - false, fl(domain, connector) - [], fl(domain, message) - [], fl(domain, remoteSensor) - [], fl(ypos, rob1) - 10, fl(domain, sort) - [agent, channel, connector, item, message, object, remoteSensor, robot, sensor, sort], fl(ypos, rob2) - 20]

--------------------------------------------

