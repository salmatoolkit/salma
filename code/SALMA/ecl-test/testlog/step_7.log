7 : _102369 _102370 _102371 _102372
Scheduled Goals:
      Name       Time Level         Id     Params Term
-------------------------------------------------------
         f          0     1          1 [] ok
         f          0     0          2 [p([0, 2]) : 1] cf(4)
         f          1     1          1 [] ok
         f          1     0          3 [p([0, 2]) : 9] cf(12)
         f          2     1          1 [] ok
         f          2     0          4 [p([0, 2]) : 12] cf(15)
         f          3     1          1 [] ok
         f          3     0          5 [p([0, 2]) : 10] cf(13)
         f          4     1          1 [] ok
         f          4     0          6 [p([0, 2]) : 8] cf(11)
         f          5     1          1 [] ok
         f          5     0          7 [p([0, 2]) : 11] cf(14)
         f          6     1          8 [] cf(10)
         f          6     1          1 [] ok
         f          6     1          9 [] cf(10)
         f          6     1         10 [] cf(10)
         f          6     1         11 [] cf(10)
         f          6     1         12 [] cf(10)
         f          6     0         14 [p([0, 2]) : 13] cf(16)
         f          6     1         13 [] cf(10)


Formula Cache:
        16 until(30, sched(p([0, 2]), _103149, cf(10)), let(w : _103165, all([xpos(rob1, _103172, s0), -(_103172, 1, _103179), _103165 = _103179]), all([w > 31])))
         1 let(z : _103203, all([xpos(rob1, _103210, s0), ypos(rob1, _103216, s0), +(_103210, _103216, _103223), +(_103223, 5, _103229), _103203 = _103229]), until(30, one([not2(occur(grab(rob1, item1))), let(startx : _103258, all([xpos(rob1, _103265, s0), _103258 = _103265]), until(5, all([xpos(rob1, _103282, s0), _103282 >= startx]), not2(carrying(rob1, item1, s0))))]), let(w : _103301, all([xpos(rob1, _103308, s0), -(_103308, 1, _103315), _103301 = _103315]), all([w > z]))))
         4 until(30, sched(p([0, 2]), _103339, ok), let(w : _103353, all([xpos(rob1, _103360, s0), -(_103360, 1, _103367), _103353 = _103367]), all([w > 25])))
        10 one([not2(occur(grab(rob1, item1))), until(5, all([xpos(rob1, _103408, s0), _103408 >= 16]), not2(carrying(rob1, item1, s0)))])
        11 until(30, sched(p([0, 2]), _103432, cf(10)), let(w : _103448, all([xpos(rob1, _103455, s0), -(_103455, 1, _103462), _103448 = _103462]), all([w > 29])))
        12 until(30, sched(p([0, 2]), _103486, cf(10)), let(w : _103502, all([xpos(rob1, _103509, s0), -(_103509, 1, _103516), _103502 = _103516]), all([w > 26])))
        13 until(30, sched(p([0, 2]), _103540, cf(10)), let(w : _103556, all([xpos(rob1, _103563, s0), -(_103563, 1, _103570), _103556 = _103570]), all([w > 28])))
        14 until(30, sched(p([0, 2]), _103594, cf(10)), let(w : _103610, all([xpos(rob1, _103617, s0), -(_103617, 1, _103624), _103610 = _103624]), all([w > 30])))
        15 until(30, sched(p([0, 2]), _103648, cf(10)), let(w : _103664, all([xpos(rob1, _103671, s0), -(_103671, 1, _103678), _103664 = _103678]), all([w > 27])))


Cache Candidates:
f(0) [16, 15, 14, 13, 12, 11, 4, 1]


State:
[fl(domain, agent) - [rob1, rob2], fl(painted, item1) - false, fl(painted, item2) - false, fl(active, rob1) - false, fl(domain, channel) - [], fl(active, rob2) - false, fl(domain, robot) - [rob1, rob2], fl(domain, object) - [item1, item2, rob1, rob2], fl(domain, sensor) - [], fl(xpos, rob1) - 17, fl(domain, item) - [item1, item2], fl(time) - 7, fl(xpos, rob2) - 10, fl(carrying, rob1, item1) - true, fl(carrying, rob1, item2) - false, fl(carrying, rob2, item1) - false, fl(carrying, rob2, item2) - false, fl(domain, connector) - [], fl(domain, message) - [], fl(domain, remoteSensor) - [], fl(ypos, rob1) - 10, fl(domain, sort) - [agent, channel, connector, item, message, object, remoteSensor, robot, sensor, sort], fl(ypos, rob2) - 20]

--------------------------------------------

